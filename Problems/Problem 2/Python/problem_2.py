'''
Problem 2 from Project Euler

Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1,2,3,5,8,21,34,55,89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms

PLEASE NOTE
In order to work you must have, at least, Python 2.3+ or higher. Python 2.7+ suggested

REGARDING THE PERFORMANCE
This is not the final version of the script, you can improve the algorithm by submitting a pull request or an issue on Github.
Feel free to ask anything on Github.

@author Claudio Ludovico Panetta (@Ludo237)
@version 1.0.0
'''
# As always we cannot "Fixed" the size of our algorithm
size = 32 # Fibonacci numbers, you can change it

# We need to pivots as starting point
pivot = [1,2]

# And of course, a list of the fibonacci numbers
fibonacci = []
total = 0

# Main algorithm starts here
for i in range(0,size):
    if( i == 0 ):
        fibonacci.append( pivot[0] )
    elif( i == 1 ):
        fibonacci.append( pivot[1] )
    else:
        fibonacci.append(sum(pivot))
        pivot[0] = pivot[1]
        pivot[1] = fibonacci[i]

    if( fibonacci[i] % 2 == 0):
        total += fibonacci[i]
